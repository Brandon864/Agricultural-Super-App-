{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchCommunities, joinCommunity, createCommunity } from '../services/communityService';\nexport const getCommunities = createAsyncThunk('communities/getCommunities', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await fetchCommunities();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const createNewCommunity = createAsyncThunk('communities/createCommunity', async (communityData, {\n  rejectWithValue\n}) => {\n  try {\n    return await createCommunity(communityData);\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const joinCommunityById = createAsyncThunk('communities/joinCommunity', async (communityId, {\n  rejectWithValue\n}) => {\n  try {\n    return await joinCommunity(communityId);\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst communitySlice = createSlice({\n  name: 'communities',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null,\n    loading: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCommunities.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(getCommunities.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(getCommunities.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(createNewCommunity.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(createNewCommunity.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items.push(action.payload);\n    }).addCase(createNewCommunity.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(joinCommunityById.fulfilled, (state, action) => {\n      const index = state.items.findIndex(community => community.id === action.payload.id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n    });\n  }\n});\nexport default communitySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchCommunities","joinCommunity","createCommunity","getCommunities","_","rejectWithValue","error","message","createNewCommunity","communityData","joinCommunityById","communityId","communitySlice","name","initialState","items","status","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","index","findIndex","community","id","reducer"],"sources":["/home/trevour/moringa-school-work/phase-5/Agricultural-Super-App-/agricultural-super-app/frontend/src/features/communitySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchCommunities, joinCommunity, createCommunity } from '../services/communityService';\n\nexport const getCommunities = createAsyncThunk(\n  'communities/getCommunities',\n  async (_, { rejectWithValue }) => {\n    try {\n      return await fetchCommunities();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const createNewCommunity = createAsyncThunk(\n  'communities/createCommunity',\n  async (communityData, { rejectWithValue }) => {\n    try {\n      return await createCommunity(communityData);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const joinCommunityById = createAsyncThunk(\n  'communities/joinCommunity',\n  async (communityId, { rejectWithValue }) => {\n    try {\n      return await joinCommunity(communityId);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst communitySlice = createSlice({\n  name: 'communities',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null,\n    loading: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getCommunities.pending, (state) => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(getCommunities.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.items = action.payload;\n      })\n      .addCase(getCommunities.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(createNewCommunity.pending, (state) => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(createNewCommunity.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.items.push(action.payload);\n      })\n      .addCase(createNewCommunity.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(joinCommunityById.fulfilled, (state, action) => {\n        const index = state.items.findIndex(community => community.id === action.payload.id);\n        if (index !== -1) {\n          state.items[index] = action.payload;\n        }\n      });\n  }\n});\n\nexport default communitySlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}