{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMessages, sendMessage } from '../services/messageService';\nexport const getMessages = createAsyncThunk('messages/getMessages', async (recipientId, {\n  rejectWithValue\n}) => {\n  try {\n    return await fetchMessages(recipientId);\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const sendNewMessage = createAsyncThunk('messages/sendMessage', async ({\n  recipientId,\n  content\n}, {\n  rejectWithValue\n}) => {\n  try {\n    return await sendMessage(recipientId, content);\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst messageSlice = createSlice({\n  name: 'messages',\n  initialState: {\n    conversations: {},\n    currentRecipient: null,\n    status: 'idle',\n    error: null,\n    loading: false\n  },\n  reducers: {\n    setCurrentRecipient: (state, action) => {\n      state.currentRecipient = action.payload;\n    },\n    addMessage: (state, action) => {\n      const {\n        recipientId,\n        message\n      } = action.payload;\n      if (!state.conversations[recipientId]) {\n        state.conversations[recipientId] = [];\n      }\n      state.conversations[recipientId].push(message);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMessages.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(getMessages.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.conversations[action.meta.arg] = action.payload;\n    }).addCase(getMessages.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(sendNewMessage.fulfilled, (state, action) => {\n      const recipientId = action.meta.arg.recipientId;\n      if (!state.conversations[recipientId]) {\n        state.conversations[recipientId] = [];\n      }\n      state.conversations[recipientId].push(action.payload);\n    });\n  }\n});\nexport const {\n  setCurrentRecipient,\n  addMessage\n} = messageSlice.actions;\nexport default messageSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchMessages","sendMessage","getMessages","recipientId","rejectWithValue","error","message","sendNewMessage","content","messageSlice","name","initialState","conversations","currentRecipient","status","loading","reducers","setCurrentRecipient","state","action","payload","addMessage","push","extraReducers","builder","addCase","pending","fulfilled","meta","arg","rejected","actions","reducer"],"sources":["/home/trevour/moringa-school-work/phase-5/Agricultural-Super-App-/agricultural-super-app/frontend/src/features/messageSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMessages, sendMessage } from '../services/messageService';\n\nexport const getMessages = createAsyncThunk(\n  'messages/getMessages',\n  async (recipientId, { rejectWithValue }) => {\n    try {\n      return await fetchMessages(recipientId);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const sendNewMessage = createAsyncThunk(\n  'messages/sendMessage',\n  async ({ recipientId, content }, { rejectWithValue }) => {\n    try {\n      return await sendMessage(recipientId, content);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst messageSlice = createSlice({\n  name: 'messages',\n  initialState: {\n    conversations: {},\n    currentRecipient: null,\n    status: 'idle',\n    error: null,\n    loading: false\n  },\n  reducers: {\n    setCurrentRecipient: (state, action) => {\n      state.currentRecipient = action.payload;\n    },\n    addMessage: (state, action) => {\n      const { recipientId, message } = action.payload;\n      if (!state.conversations[recipientId]) {\n        state.conversations[recipientId] = [];\n      }\n      state.conversations[recipientId].push(message);\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getMessages.pending, (state) => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(getMessages.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.conversations[action.meta.arg] = action.payload;\n      })\n      .addCase(getMessages.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(sendNewMessage.fulfilled, (state, action) => {\n        const recipientId = action.meta.arg.recipientId;\n        if (!state.conversations[recipientId]) {\n          state.conversations[recipientId] = [];\n        }\n        state.conversations[recipientId].push(action.payload);\n      });\n  }\n});\n\nexport const { setCurrentRecipient, addMessage } = messageSlice.actions;\nexport default messageSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,aAAa,EAAEC,WAAW,QAAQ,4BAA4B;AAEvE,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACzC,sBAAsB,EACtB,OAAOI,WAAW,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,OAAO,MAAMJ,aAAa,CAACG,WAAW,CAAC;EACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOD,eAAe,CAACC,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGR,gBAAgB,CAC5C,sBAAsB,EACtB,OAAO;EAAEI,WAAW;EAAEK;AAAQ,CAAC,EAAE;EAAEJ;AAAgB,CAAC,KAAK;EACvD,IAAI;IACF,OAAO,MAAMH,WAAW,CAACE,WAAW,EAAEK,OAAO,CAAC;EAChD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,OAAOD,eAAe,CAACC,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,MAAMG,YAAY,GAAGX,WAAW,CAAC;EAC/BY,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,aAAa,EAAE,CAAC,CAAC;IACjBC,gBAAgB,EAAE,IAAI;IACtBC,MAAM,EAAE,MAAM;IACdT,KAAK,EAAE,IAAI;IACXU,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACL,gBAAgB,GAAGM,MAAM,CAACC,OAAO;IACzC,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEhB,WAAW;QAAEG;MAAQ,CAAC,GAAGa,MAAM,CAACC,OAAO;MAC/C,IAAI,CAACF,KAAK,CAACN,aAAa,CAACT,WAAW,CAAC,EAAE;QACrCe,KAAK,CAACN,aAAa,CAACT,WAAW,CAAC,GAAG,EAAE;MACvC;MACAe,KAAK,CAACN,aAAa,CAACT,WAAW,CAAC,CAACmB,IAAI,CAAChB,OAAO,CAAC;IAChD;EACF,CAAC;EACDiB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,WAAW,CAACwB,OAAO,EAAGR,KAAK,IAAK;MACvCA,KAAK,CAACJ,MAAM,GAAG,SAAS;MACxBI,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDoB,OAAO,CAACvB,WAAW,CAACyB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACN,aAAa,CAACO,MAAM,CAACS,IAAI,CAACC,GAAG,CAAC,GAAGV,MAAM,CAACC,OAAO;IACvD,CAAC,CAAC,CACDK,OAAO,CAACvB,WAAW,CAAC4B,QAAQ,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACb,KAAK,GAAGc,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDK,OAAO,CAAClB,cAAc,CAACoB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACpD,MAAMhB,WAAW,GAAGgB,MAAM,CAACS,IAAI,CAACC,GAAG,CAAC1B,WAAW;MAC/C,IAAI,CAACe,KAAK,CAACN,aAAa,CAACT,WAAW,CAAC,EAAE;QACrCe,KAAK,CAACN,aAAa,CAACT,WAAW,CAAC,GAAG,EAAE;MACvC;MACAe,KAAK,CAACN,aAAa,CAACT,WAAW,CAAC,CAACmB,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACvD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,mBAAmB;EAAEI;AAAW,CAAC,GAAGZ,YAAY,CAACsB,OAAO;AACvE,eAAetB,YAAY,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}